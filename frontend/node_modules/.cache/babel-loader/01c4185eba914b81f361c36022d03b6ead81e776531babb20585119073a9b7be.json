{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentQuery: \"\",\n  queryHistory: [],\n  isLoading: false,\n  error: null\n};\nexport const queriesSlice = createSlice({\n  name: \"queries\",\n  initialState,\n  reducers: {\n    setCurrentQuery: (state, action) => {\n      state.currentQuery = action.payload;\n    },\n    addQueryToHistory: (state, action) => {\n      // Avoid duplicate queries in history\n      if (!state.queryHistory.includes(action.payload)) {\n        state.queryHistory.unshift(action.payload);\n        // Keep only the last 10 queries\n        if (state.queryHistory.length > 10) {\n          state.queryHistory.pop();\n        }\n      }\n    },\n    deleteQueryFromHistory: (state, action) => {\n      state.queryHistory = state.queryHistory.filter((_, index) => index !== action.payload);\n    },\n    clearAllHistory: state => {\n      state.queryHistory = [];\n    },\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  setCurrentQuery,\n  addQueryToHistory,\n  deleteQueryFromHistory,\n  clearAllHistory,\n  setLoading,\n  setError,\n  clearError\n} = queriesSlice.actions;\nexport default queriesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentQuery","queryHistory","isLoading","error","queriesSlice","name","reducers","setCurrentQuery","state","action","payload","addQueryToHistory","includes","unshift","length","pop","deleteQueryFromHistory","filter","_","index","clearAllHistory","setLoading","setError","clearError","actions","reducer"],"sources":["C:/Users/ayusi/Desktop/pro1/frontend/src/redux/slices/queriesSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  currentQuery: \"\",\r\n  queryHistory: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nexport const queriesSlice = createSlice({\r\n  name: \"queries\",\r\n  initialState,\r\n  reducers: {\r\n    setCurrentQuery: (state, action) => {\r\n      state.currentQuery = action.payload;\r\n    },\r\n    addQueryToHistory: (state, action) => {\r\n      // Avoid duplicate queries in history\r\n      if (!state.queryHistory.includes(action.payload)) {\r\n        state.queryHistory.unshift(action.payload);\r\n        // Keep only the last 10 queries\r\n        if (state.queryHistory.length > 10) {\r\n          state.queryHistory.pop();\r\n        }\r\n      }\r\n    },\r\n    deleteQueryFromHistory: (state, action) => {\r\n      state.queryHistory = state.queryHistory.filter((_, index) => index !== action.payload);\r\n    },\r\n    clearAllHistory: (state) => {\r\n      state.queryHistory = [];\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setCurrentQuery,\r\n  addQueryToHistory,\r\n  deleteQueryFromHistory,\r\n  clearAllHistory,\r\n  setLoading,\r\n  setError,\r\n  clearError,\r\n} = queriesSlice.actions;\r\n\r\nexport default queriesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGN,WAAW,CAAC;EACtCO,IAAI,EAAE,SAAS;EACfN,YAAY;EACZO,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACR,YAAY,GAAGS,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,iBAAiB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MACpC;MACA,IAAI,CAACD,KAAK,CAACP,YAAY,CAACW,QAAQ,CAACH,MAAM,CAACC,OAAO,CAAC,EAAE;QAChDF,KAAK,CAACP,YAAY,CAACY,OAAO,CAACJ,MAAM,CAACC,OAAO,CAAC;QAC1C;QACA,IAAIF,KAAK,CAACP,YAAY,CAACa,MAAM,GAAG,EAAE,EAAE;UAClCN,KAAK,CAACP,YAAY,CAACc,GAAG,CAAC,CAAC;QAC1B;MACF;IACF,CAAC;IACDC,sBAAsB,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MACzCD,KAAK,CAACP,YAAY,GAAGO,KAAK,CAACP,YAAY,CAACgB,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAKV,MAAM,CAACC,OAAO,CAAC;IACxF,CAAC;IACDU,eAAe,EAAGZ,KAAK,IAAK;MAC1BA,KAAK,CAACP,YAAY,GAAG,EAAE;IACzB,CAAC;IACDoB,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO;IAClC,CAAC;IACDY,QAAQ,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDa,UAAU,EAAGf,KAAK,IAAK;MACrBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXI,eAAe;EACfI,iBAAiB;EACjBK,sBAAsB;EACtBI,eAAe;EACfC,UAAU;EACVC,QAAQ;EACRC;AACF,CAAC,GAAGnB,YAAY,CAACoB,OAAO;AAExB,eAAepB,YAAY,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}