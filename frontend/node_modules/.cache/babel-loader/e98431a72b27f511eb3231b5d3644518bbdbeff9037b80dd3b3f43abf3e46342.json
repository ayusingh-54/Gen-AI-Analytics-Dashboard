{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading, setError, addQueryToHistory } from \"../redux/slices/queriesSlice\";\nimport { setChartData, setRawData } from \"../redux/slices/resultsSlice\";\nimport { generateMockData } from \"../utils/mockDataGenerator\";\nexport const useMockAI = () => {\n  _s();\n  const [chartType, setChartType] = useState(\"bar\");\n  const dispatch = useDispatch();\n  const processQuery = useCallback(async query => {\n    if (!query.trim()) return;\n    try {\n      // Start loading\n      dispatch(setLoading(true));\n\n      // Add query to history\n      dispatch(addQueryToHistory(query));\n\n      // Simulate API call with timeout\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Generate mock data based on query\n      const {\n        chartData,\n        rawData,\n        chartType\n      } = generateMockData(query);\n\n      // Update state with results\n      dispatch(setChartData(chartData));\n      dispatch(setRawData(rawData));\n      setChartType(chartType);\n\n      // Clear any previous errors\n      dispatch(setError(null));\n    } catch (error) {\n      dispatch(setError(\"Failed to process query. Please try again.\"));\n    } finally {\n      dispatch(setLoading(false));\n    }\n  }, [dispatch]);\n  return {\n    processQuery,\n    chartType\n  };\n};\n_s(useMockAI, \"DTlzSk7O+WzdvvVisJ1HMYZZogo=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useState","useCallback","useDispatch","setLoading","setError","addQueryToHistory","setChartData","setRawData","generateMockData","useMockAI","_s","chartType","setChartType","dispatch","processQuery","query","trim","Promise","resolve","setTimeout","chartData","rawData","error"],"sources":["C:/Users/ayusi/Desktop/pro1/frontend/src/hooks/useMockAI.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setLoading,\r\n  setError,\r\n  addQueryToHistory,\r\n} from \"../redux/slices/queriesSlice\";\r\nimport { setChartData, setRawData } from \"../redux/slices/resultsSlice\";\r\nimport { generateMockData } from \"../utils/mockDataGenerator\";\r\n\r\nexport const useMockAI = () => {\r\n  const [chartType, setChartType] = useState(\"bar\");\r\n  const dispatch = useDispatch();\r\n\r\n  const processQuery = useCallback(\r\n    async (query) => {\r\n      if (!query.trim()) return;\r\n\r\n      try {\r\n        // Start loading\r\n        dispatch(setLoading(true));\r\n\r\n        // Add query to history\r\n        dispatch(addQueryToHistory(query));\r\n\r\n        // Simulate API call with timeout\r\n        await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n        // Generate mock data based on query\r\n        const { chartData, rawData, chartType } = generateMockData(query);\r\n\r\n        // Update state with results\r\n        dispatch(setChartData(chartData));\r\n        dispatch(setRawData(rawData));\r\n        setChartType(chartType);\r\n\r\n        // Clear any previous errors\r\n        dispatch(setError(null));\r\n      } catch (error) {\r\n        dispatch(setError(\"Failed to process query. Please try again.\"));\r\n      } finally {\r\n        dispatch(setLoading(false));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return { processQuery, chartType };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,aAAa;AACzC,SACEC,UAAU,EACVC,QAAQ,EACRC,iBAAiB,QACZ,8BAA8B;AACrC,SAASC,YAAY,EAAEC,UAAU,QAAQ,8BAA8B;AACvE,SAASC,gBAAgB,QAAQ,4BAA4B;AAE7D,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAGb,WAAW,CAC9B,MAAOc,KAAK,IAAK;IACf,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;IAEnB,IAAI;MACF;MACAH,QAAQ,CAACV,UAAU,CAAC,IAAI,CAAC,CAAC;;MAE1B;MACAU,QAAQ,CAACR,iBAAiB,CAACU,KAAK,CAAC,CAAC;;MAElC;MACA,MAAM,IAAIE,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEzD;MACA,MAAM;QAAEE,SAAS;QAAEC,OAAO;QAAEV;MAAU,CAAC,GAAGH,gBAAgB,CAACO,KAAK,CAAC;;MAEjE;MACAF,QAAQ,CAACP,YAAY,CAACc,SAAS,CAAC,CAAC;MACjCP,QAAQ,CAACN,UAAU,CAACc,OAAO,CAAC,CAAC;MAC7BT,YAAY,CAACD,SAAS,CAAC;;MAEvB;MACAE,QAAQ,CAACT,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdT,QAAQ,CAACT,QAAQ,CAAC,4CAA4C,CAAC,CAAC;IAClE,CAAC,SAAS;MACRS,QAAQ,CAACV,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7B;EACF,CAAC,EACD,CAACU,QAAQ,CACX,CAAC;EAED,OAAO;IAAEC,YAAY;IAAEH;EAAU,CAAC;AACpC,CAAC;AAACD,EAAA,CAtCWD,SAAS;EAAA,QAEHP,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}